
                                                                bestcase   worstcase
int i = 0;                                                         1         1                                         
  
        while (i < n) {                                            n-1         n-1 iteration
         if (i == 0 || arr[i] >= arr[i - 1]) {                     2(n-1)         1 ite: 1
            // Move towards the end of the array                              2 ite : 2
                                                                              3 ite : 3
                                                                              ...
                                                                              n-1 ite : n-1 fois 
            ++i;                        
        } else {                                                   0           1 ite : 0
                                                                   0            2 ite : 1
            // Swap and move towards the start of the array        0            3 ite : 2
            swap(&arr[i], &arr[i - 1]);                            0            ...
            --i;                                                   0            n ite : n-1
        }                                                                     ==(1+2+..+n-1+0+1+..+n-1)
    }


best 1+n+n = 3n-2
worst 1+2*3*somme(i)= 1+6*n(n-1)/2 = 1+3n(n-1) = 3n*n+3n-2